apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: ${{values.component_id | dump}}
  {%- if values.description %}
  description: ${{values.description | dump}}
  {%- endif %}
  links:
    - url: https://example.com/user
      title: Usuários
      icon: user

    - url: https://example.com/group
      title: Grupo Slack
      icon: group

    - url: https://example.com/cloud
      title: Rancher/GCP/AWS/AKS
      icon: cloud

    - url: https://example.com/dashboard
      title: Dashboard (Skywalking)
      icon: dashboard

    - url: https://example.com/help
      title: Jira
      icon: help

    - url: https://example.com/web
      title: Website
      icon: web

    - url: https://example.com/alert
      title: Alertas (Skywalking)
      icon: alert

    - url: https://example.com/alert
      title: Logs (Skywalking)
      icon: alert

    - url: https://example.com/alert
      title: Trace (Skywalking)
      icon: alert
  tags:
    - java
    - spring
    - bms
    - rest
  annotations:
    tech.kode3/stack: spring
    jenkins.io/job-full-name: ${{values.destination.owner + "/" + values.destination.repo}}
    gitlab.com/project-slug: ${{values.destination.owner + "/" + values.destination.repo}}
    backstage.io/techdocs-ref: dir:.
spec:
  type: service
  version: v1.0.0
  lifecycle: development
  owner: ${{values.owner | dump}}
  providesApis:
    - ${{values.component_id}}-api

---

apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: ${{ values.component_id}}-api
  description: ${{values.description | dump}}
  tags:
    - java
    - spring
    - bms
    - rest
spec:
  type: openapi
  lifecycle: development
  version: v1
  owner: ${{values.owner | dump}}
  definition: |
    openapi: 3.0.2
    info:
        title: Vivo Planos API
        version: 1.0.0
        description: A brand new API with no content.  Go nuts!
    paths:
        /planos:
            summary: Path used to manage the list of planos.
            description: >-
                The REST endpoint/path used to list and create zero or more `plano` entities.  This path contains
                a `GET` and `POST` operation to perform the list and create tasks, respectively.
            get:
                parameters:
                    -
                        name: ddd
                        description: DDD da área para listar os planos
                        schema:
                            type: string
                        in: query
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/plano'
                                examples:
                                    200-Sucesso:
                                        value:
                                            -
                                                codigo: vivo_ctrl_cartao_6_5gb_49
                                                nome: 'VIVO CTRL CARTAO - 6,5GB'
                                                valor: 54.99
                                                example: '6,5GB'
                                            -
                                                codigo: vivo_ctrl_cartao_13gb_49
                                                nome: VIVO CTRL CARTAO - 13GB
                                                valor: 74.99
                                                example: 13GB
                        description: Successful response - returns an array of `plano` entities.
                operationId: getplanos
                summary: Lista todos os planos por DDD
                description: Gets a list of all `plano` entities.
    components:
        schemas:
            plano:
                title: Root Type for plano
                description: ''
                type: object
                properties:
                    codigo:
                        type: string
                    nome:
                        type: string
                    valor:
                        format: double
                        type: number
                    example:
                        type: string
                example:
                    codigo: vivo_ctrl_cartao_6_5gb_49
                    nome: 'VIVO CTRL CARTAO - 6,5GB'
                    valor: 54.99
                    example: '6,5GB'
